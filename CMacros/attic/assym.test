{	
	//TF1 *N = new TF1("N","(1/3)*(x-1)*(x-1)*(-(x*x)+x+3)",0,1);
	// TF1 *N = new TF1("N","(.33) * ((x-1)*(x-1)) * (-(x*x)+x+3)",0,1);
	TF1 *N = new TF1("N","(.33) * ((x-1)*(x-1)) * (-(x*x)+x+3)",0,1); // 3.43
	TF1 *A_gm2 = new TF1("A_gm2","( 1+y-(8*x*x) )/( (4*x*x)-5*x-5)",0,1); 
	TF1 *A_edm = new TF1("A_edm","( x * (2*x + 1) ) / ( -x*x + x + 3 )",0,1); 
	TF1 *NA2 = new TF1("NA2","35.1765 * N * A_edm * A_edm",0,1);

	//NA2->Scale(1/NA2->Integral(0,1));
	cout<<NA2->GetMaximum()<<endl;
	TLine *y_0 = new TLine(0,0,1,0);  

	//TF1 *N = new TF1("N","(1/3) * ((x-1)*(x-1)) * (-(x*x)+x+3)",0,1);
	//TF1 *N = new TF1("N","x*x",0,1);
	TCanvas *c = new TCanvas("c","c",800,600); 

	N->SetTitle(";y=p/p_{max};Relative scale");
	//N->SetTitle(";Fractional positron energy (y);Relative scale");
	N->GetYaxis()->SetRangeUser(-0.05,1.05);
	N->Draw(); // GetYaxis()->SetRangeUser(0,0.01);

	A_edm->Draw("same");
	NA2->Draw("same");
	y_0->Draw("same");
	c->SaveAs("poo.png");
}